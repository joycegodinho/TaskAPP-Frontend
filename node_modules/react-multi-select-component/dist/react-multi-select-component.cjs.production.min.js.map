{"version":3,"file":"react-multi-select-component.cjs.production.min.js","sources":["../src/hooks/use-multi-select.tsx","../src/lib/classnames.ts","../src/lib/fuzzy-match-utils.tsx","../src/select-panel/cross.tsx","../src/select-panel/default-item.tsx","../src/select-panel/select-item.tsx","../src/select-panel/select-list.tsx","../src/select-panel/index.tsx","../src/lib/debounce.tsx","../src/multi-select/arrow.tsx","../src/multi-select/header.tsx","../src/multi-select/loading.tsx","../src/multi-select/dropdown.tsx","../src/hooks/use-did-update-effect.tsx","../src/multi-select/index.tsx"],"sourcesContent":["import React from \"react\";\n\nimport { ISelectProps, Option } from \"../lib/interfaces\";\n\nconst defaultStrings = {\n  allItemsAreSelected: \"All items are selected.\",\n  clearSearch: \"Clear Search\",\n  clearSelected: \"Clear Selected\",\n  noOptions: \"No options\",\n  search: \"Search\",\n  selectAll: \"Select All\",\n  selectSomeItems: \"Select...\",\n};\n\nconst defaultProps: Partial<ISelectProps> = {\n  value: [],\n  focusSearchOnOpen: true,\n  hasSelectAll: true,\n  className: \"multi-select\",\n  debounceDuration: 200,\n  options: [] as Option[],\n};\n\ninterface MultiSelectContextProps extends ISelectProps {\n  t: (key: string) => string;\n}\n\ninterface MultiSelectProviderProps {\n  props: ISelectProps;\n  children;\n}\n\nconst MultiSelectContext = React.createContext<MultiSelectContextProps>(\n  {} as MultiSelectContextProps\n);\n\nexport const MultiSelectProvider = ({\n  props,\n  children,\n}: MultiSelectProviderProps) => {\n  const t = (key) => props.overrideStrings?.[key] || defaultStrings[key];\n\n  return (\n    <MultiSelectContext.Provider value={{ t, ...defaultProps, ...props }}>\n      {children}\n    </MultiSelectContext.Provider>\n  );\n};\n\nexport const useMultiSelect = () => React.useContext(MultiSelectContext);\n","/**\n * combines classNames in a friendly way\n *\n * @param {*} classes\n */\nexport const cn = (...classes) => classes.join(\" \");\n","import { Option } from \"./interfaces\";\n\n/**\n * A collection of string matching algorithms built with React Select in mind.\n */\n\n// Option type from React Select and similar libraries.\ntype MapOfStrings = { [key: string]: string };\n\n/**\n * Filters React Select options and sorts by similarity to a search filter.\n * Handles partial matches, eg. searching for \"Waberg High\" will find \"Raoul\n * Wallenberg Traditional High School\". Case insensitive. Ignores\n * non-alphanumeric characters.\n *\n * @param  options  An unfiltered list of Options.\n * @param? filter  A string to compare against Option labels.\n * @param? substitutions  Strings with multiple spellings or variations that we\n *           expect to match, eg. accented characters or abbreviated words.\n *\n * @return A filtered and sorted array of Options.\n */\nexport function filterOptions(\n  options: Option[],\n  filter?: string,\n  substitutions?: MapOfStrings\n): Option[] {\n  // If the filter is blank, return the full list of Options.\n  if (!filter) {\n    return options;\n  }\n\n  const cleanFilter = cleanUpText(filter, substitutions);\n  return (\n    options\n      // Filter out undefined or null Options.\n      .filter(({ label, value }) => label != null && value != null)\n      // Create a {score, Option} pair for each Option based on its label's\n      // similarity to the filter text.\n      .map((option) => ({\n        option: option,\n        score: typeaheadSimilarity(\n          cleanUpText(option.label, substitutions),\n          cleanFilter\n        ),\n      }))\n      // Only include matches of the entire substring, with a slight\n      // affordance for transposition or extra characters.\n      .filter((pair) => pair.score >= cleanFilter.length - 2)\n      // Sort 'em by order of their score.\n      .sort((a, b) => b.score - a.score)\n      // …and grab the original Options back from their pairs.\n      .map((pair) => pair.option)\n  );\n}\n\n/**\n * Scores the similarity between two strings by returning the length of the\n * longest common subsequence. Intended for comparing strings of different\n * lengths; eg. when matching a typeahead search input with a school name.\n\n * Meant for use in an instant search box where results are being fetched\n * as a user is typing.\n *\n * @param  a  The longer string (though, we flip them if it's shorter).\n * @param  b  The shorter string, eg. a typeahead search input.\n *\n * @return The length of the longest common subsequence. Higher scores indicate\n *           closer matches.\n */\nexport function typeaheadSimilarity(a: string, b: string): number {\n  const aLength = a.length;\n  const bLength = b.length;\n  const table: any[] = [];\n\n  if (!aLength || !bLength) {\n    return 0;\n  }\n\n  // Ensure `a` isn't shorter than `b`.\n  if (aLength < bLength) {\n    [a, b] = [b, a];\n  }\n\n  // Early exit if `a` includes `b`; these will be scored higher than any\n  // other options with the same `b` (filter string), with a preference for\n  // shorter `a` strings (option labels).\n  if (a.indexOf(b) !== -1) {\n    return bLength + 1 / aLength;\n  }\n\n  // Initialize the table axes:\n  //\n  //    0 0 0 0 ... bLength\n  //    0\n  //    0\n  //\n  //   ...\n  //\n  // aLength\n  //\n  for (let x = 0; x <= aLength; ++x) {\n    table[x] = [0];\n  }\n  for (let y = 0; y <= bLength; ++y) {\n    table[0][y] = 0;\n  }\n\n  // Populate the rest of the table with a dynamic programming algorithm.\n  for (let x = 1; x <= aLength; ++x) {\n    for (let y = 1; y <= bLength; ++y) {\n      table[x][y] =\n        a[x - 1] === b[y - 1]\n          ? 1 + table[x - 1][y - 1]\n          : Math.max(table[x][y - 1], table[x - 1][y]);\n    }\n  }\n\n  return table[aLength][bLength];\n}\n\n/**\n * Apply string substitutions, remove non-alphanumeric characters, and convert\n * all letters to uppercase.\n *\n * eg. 'Scoil Bhríde Primary School' may become 'SCOILBHRIDEPRIMARYSCHOOL'.\n *\n * @param  input  An unsanitized input string.\n * @param  substitutions  Strings with multiple spellings or variations that we\n *          expect to match, for example accented characters or abbreviated\n *          words.\n *\n * @return The sanitized text.\n */\nexport function cleanUpText(\n  input?: string,\n  substitutions?: MapOfStrings\n): string {\n  if (!input) {\n    return \"\";\n  }\n\n  // Uppercase and remove all non-alphanumeric, non-accented characters.\n  // Also remove underscores.\n  input = input.toUpperCase().replace(/((?=[^\\u00E0-\\u00FC])\\W)|_/g, \"\");\n\n  if (!substitutions) {\n    return input;\n  }\n  const safeSubstitutions: MapOfStrings = substitutions; // For Flow.\n\n  // Replace all strings in `safeSubstitutions` with their standardized\n  // counterparts.\n  return Object.keys(safeSubstitutions).reduce((output, substitution) => {\n    const unsubbed = new RegExp(substitution, \"g\");\n    return output.replace(unsubbed, safeSubstitutions[substitution]);\n  }, input);\n}\n","import React from \"react\";\n\nexport const Cross = () => (\n  <svg\n    width=\"24\"\n    height=\"24\"\n    fill=\"none\"\n    stroke=\"currentColor\"\n    strokeWidth=\"2\"\n    className=\"dropdown-search-clear-icon gray\"\n  >\n    <line x1=\"18\" y1=\"6\" x2=\"6\" y2=\"18\"></line>\n    <line x1=\"6\" y1=\"6\" x2=\"18\" y2=\"18\"></line>\n  </svg>\n);\n","import { css } from \"goober\";\nimport React from \"react\";\n\nimport { cn } from \"../lib/classnames\";\nimport { Option } from \"../lib/interfaces\";\n\ninterface IDefaultItemRendererProps {\n  checked: boolean;\n  option: Option;\n  disabled?: boolean;\n  onClick;\n}\n\nconst DefaultRenderer = css({\n  \"& input,& span\": {\n    verticalAlign: \"middle\",\n    margin: 0,\n  },\n  span: {\n    display: \"inline-block\",\n    paddingLeft: \"5px\",\n  },\n  \"&.disabled\": {\n    opacity: 0.5,\n  },\n});\n\nconst DefaultItemRenderer = ({\n  checked,\n  option,\n  onClick,\n  disabled,\n}: IDefaultItemRendererProps) => (\n  <div className={cn(DefaultRenderer, \"item-renderer\", disabled && \"disabled\")}>\n    <input\n      type=\"checkbox\"\n      onChange={onClick}\n      checked={checked}\n      tabIndex={-1}\n      disabled={disabled}\n    />\n    <span>{option.label}</span>\n  </div>\n);\n\nexport default DefaultItemRenderer;\n","/**\n * This component represents an individual item in the multi-select drop-down\n */\nimport { css } from \"goober\";\nimport React, { useEffect, useRef } from \"react\";\n\nimport { cn } from \"../lib/classnames\";\nimport { Option } from \"../lib/interfaces\";\nimport DefaultItemRenderer from \"./default-item\";\n\ninterface ISelectItemProps {\n  itemRenderer;\n  option: Option;\n  checked: boolean;\n  focused?: boolean;\n  tabIndex?: number;\n  disabled?: boolean;\n  onSelectionChanged: (checked: boolean) => void;\n  onClick;\n}\n\nconst ItemContainer = css({\n  boxSizing: \"border-box\",\n  cursor: \"pointer\",\n  display: \"block\",\n  padding: \"var(--rmsc-p)\",\n  outline: 0,\n  \"&:hover,&:focus\": {\n    background: \"var(--rmsc-hover)\",\n  },\n  \"&.selected\": {\n    background: \"var(--rmsc-selected)\",\n  },\n});\n\nconst SelectItem = ({\n  itemRenderer: ItemRenderer = DefaultItemRenderer,\n  option,\n  checked,\n  focused,\n  tabIndex,\n  disabled,\n  onSelectionChanged,\n  onClick,\n}: ISelectItemProps) => {\n  const itemRef: any = useRef();\n\n  useEffect(() => {\n    updateFocus();\n    // eslint-disable-next-line\n  }, [checked, focused]);\n\n  const toggleChecked = () => {\n    onSelectionChanged(!checked);\n  };\n\n  const handleClick = (e) => {\n    toggleChecked();\n    onClick(e);\n  };\n\n  const updateFocus = () => {\n    if (focused && !disabled && itemRef) {\n      itemRef.current.focus();\n    }\n  };\n\n  const handleKeyDown = (e) => {\n    switch (e.which) {\n      case 13: // Enter\n      case 32: // Space\n        toggleChecked();\n        break;\n      default:\n        return;\n    }\n    e.preventDefault();\n  };\n\n  return (\n    <label\n      className={cn(ItemContainer, \"select-item\", checked && \"selected\")}\n      role=\"option\"\n      aria-selected={checked}\n      tabIndex={tabIndex}\n      ref={itemRef}\n      onKeyDown={handleKeyDown}\n    >\n      <ItemRenderer\n        option={option}\n        checked={checked}\n        onClick={handleClick}\n        disabled={disabled}\n      />\n    </label>\n  );\n};\n\nexport default SelectItem;\n","/**\n * This component represents an unadorned list of SelectItem (s).\n */\nimport { css } from \"goober\";\nimport React from \"react\";\n\nimport { useMultiSelect } from \"../hooks/use-multi-select\";\nimport { Option } from \"../lib/interfaces\";\nimport SelectItem from \"./select-item\";\n\ninterface ISelectListProps {\n  focusIndex: number;\n  options: Option[];\n  onClick: Function;\n}\n\nconst SelectListUl = css({\n  margin: 0,\n  paddingLeft: 0,\n  li: {\n    listStyle: \"none\",\n    margin: 0,\n  },\n});\n\nconst skipIndex = 2;\n\nconst SelectList = ({ options, focusIndex, onClick }: ISelectListProps) => {\n  const { disabled, value, onChange, ItemRenderer } = useMultiSelect();\n\n  const handleSelectionChanged = (option: Option, checked: boolean) => {\n    if (disabled) {\n      return;\n    }\n    onChange(\n      checked\n        ? [...value, option]\n        : value.filter((o: any) => o.value !== option.value)\n    );\n  };\n\n  return (\n    <ul className={SelectListUl}>\n      {options.map((o: any, i) => {\n        const tabIndex = i + skipIndex;\n\n        return (\n          <li key={o?.key || i}>\n            <SelectItem\n              focused={focusIndex === tabIndex}\n              tabIndex={tabIndex}\n              option={o}\n              onSelectionChanged={(c) => handleSelectionChanged(o, c)}\n              checked={value.find((s) => s.value === o.value) ? true : false}\n              onClick={(e) => onClick(e, tabIndex)}\n              itemRenderer={ItemRenderer}\n              disabled={o.disabled || disabled}\n            />\n          </li>\n        );\n      })}\n    </ul>\n  );\n};\n\nexport default SelectList;\n","/**\n * This component represents the entire panel which gets dropped down when the\n * user selects the component.  It encapsulates the search filter, the\n * Select-all item, and the list of options.\n */\nimport { css } from \"goober\";\nimport React, { useCallback, useEffect, useMemo, useState } from \"react\";\n\nimport { useMultiSelect } from \"../hooks/use-multi-select\";\nimport { cn } from \"../lib/classnames\";\nimport { debounce } from \"../lib/debounce\";\nimport { filterOptions } from \"../lib/fuzzy-match-utils\";\nimport { Cross } from \"./cross\";\nimport SelectItem from \"./select-item\";\nimport SelectList from \"./select-list\";\n\nenum FocusType {\n  SEARCH = -1,\n  NONE = 1,\n}\n\nconst SelectSearchContainer = css({\n  width: \"100%\",\n  position: \"relative\",\n  borderBottom: \"1px solid var(--rmsc-border)\",\n  input: {\n    height: \"var(--rmsc-h)\",\n    padding: \"0 var(--rmsc-p)\",\n    width: \"100%\",\n    outline: 0,\n    border: 0,\n  },\n});\n\nconst SearchClearButton = css({\n  cursor: \"pointer\",\n  position: \"absolute\",\n  top: 0,\n  right: 0,\n  bottom: 0,\n  background: \"none\",\n  border: 0,\n  padding: \"0 calc(var(--rmsc-p)/2)\",\n  \"[hidden]\": {\n    display: \"none\",\n  },\n});\n\nconst NoOptions = css({\n  padding: \"var(--rmsc-p)\",\n  textAlign: \"center\",\n  color: \"var(--rmsc-gray)\",\n});\n\nconst SelectPanel = () => {\n  const {\n    t,\n    onChange,\n    options,\n    value,\n    filterOptions: customFilterOptions,\n    selectAllLabel,\n    ItemRenderer,\n    disabled,\n    disableSearch,\n    focusSearchOnOpen,\n    hasSelectAll,\n    ClearIcon,\n    debounceDuration,\n  } = useMultiSelect();\n\n  const [searchText, setSearchText] = useState(\"\");\n  const [filteredOptions, setFilteredOptions] = useState(options);\n  const [searchTextForFilter, setSearchTextForFilter] = useState(\"\");\n  const [focusIndex, setFocusIndex] = useState(\n    focusSearchOnOpen && !disableSearch ? FocusType.SEARCH : FocusType.NONE\n  );\n  const debouncedSearch = useCallback(\n    debounce((query) => setSearchTextForFilter(query), debounceDuration),\n    []\n  );\n\n  const selectAllOption = {\n    label: selectAllLabel || t(\"selectAll\"),\n    value: \"\",\n  };\n\n  const selectAllValues = (checked) => {\n    const filteredValues = filteredOptions\n      .filter((o) => !o.disabled)\n      .map((o) => o.value);\n\n    if (checked) {\n      const selectedValues = value.map((o) => o.value);\n      const finalSelectedValues = [...selectedValues, ...filteredValues];\n\n      return filteredOptions.filter((o) =>\n        finalSelectedValues.includes(o.value)\n      );\n    }\n\n    return value.filter((o) => !filteredValues.includes(o.value));\n  };\n\n  const selectAllChanged = (checked: boolean) => {\n    const newOptions = selectAllValues(checked);\n    onChange(newOptions);\n  };\n\n  const handleSearchChange = (e) => {\n    debouncedSearch(e.target.value);\n    setSearchText(e.target.value);\n    setFocusIndex(FocusType.SEARCH);\n  };\n\n  const handleClear = () => {\n    setSearchTextForFilter(\"\");\n    setSearchText(\"\");\n  };\n\n  const handleItemClicked = (index: number) => setFocusIndex(index);\n\n  const handleKeyDown = (e) => {\n    switch (e.which) {\n      case 38: // Up Arrow\n        if (e.altKey) {\n          return;\n        }\n        updateFocus(-1);\n        break;\n      case 40: // Down Arrow\n        if (e.altKey) {\n          return;\n        }\n        updateFocus(1);\n        break;\n      default:\n        return;\n    }\n    e.stopPropagation();\n    e.preventDefault();\n  };\n\n  const handleSearchFocus = () => {\n    setFocusIndex(FocusType.SEARCH);\n  };\n\n  const getFilteredOptions = async () =>\n    customFilterOptions\n      ? await customFilterOptions(options, searchTextForFilter)\n      : filterOptions(options, searchTextForFilter);\n\n  const updateFocus = (offset: number) => {\n    let newFocus = focusIndex + offset;\n    newFocus = Math.max(1, newFocus);\n    newFocus = Math.min(newFocus, options.length + 1);\n    setFocusIndex(newFocus);\n  };\n\n  const [isAllOptionSelected, hasSelectableOptions] = useMemo(() => {\n    const filteredOptionsList = filteredOptions.filter((o) => !o.disabled);\n    return [\n      filteredOptionsList.every(\n        (o) => value.findIndex((v) => v.value === o.value) !== -1\n      ),\n      filteredOptionsList.length !== 0,\n    ];\n    // eslint-disable-next-line\n  }, [filteredOptions, value]);\n\n  useEffect(() => {\n    getFilteredOptions().then(setFilteredOptions);\n  }, [searchTextForFilter, options]);\n\n  return (\n    <div className=\"select-panel\" role=\"listbox\" onKeyDown={handleKeyDown}>\n      {!disableSearch && (\n        <div className={SelectSearchContainer}>\n          <input\n            autoFocus={focusSearchOnOpen}\n            placeholder={t(\"search\")}\n            type=\"text\"\n            aria-describedby={t(\"search\")}\n            onKeyDown={(e) => e.stopPropagation()}\n            onChange={handleSearchChange}\n            onFocus={handleSearchFocus}\n            value={searchText}\n          />\n          <button\n            type=\"button\"\n            className={cn(SearchClearButton, \"search-clear-button\")}\n            hidden={!searchText}\n            onClick={handleClear}\n            aria-label={t(\"clearSearch\")}\n          >\n            {ClearIcon || <Cross />}\n          </button>\n        </div>\n      )}\n\n      {hasSelectAll && hasSelectableOptions && (\n        <SelectItem\n          focused={focusIndex === 1}\n          tabIndex={1}\n          checked={isAllOptionSelected}\n          option={selectAllOption}\n          onSelectionChanged={selectAllChanged}\n          onClick={() => handleItemClicked(1)}\n          itemRenderer={ItemRenderer}\n          disabled={disabled}\n        />\n      )}\n\n      {filteredOptions.length ? (\n        <SelectList\n          options={filteredOptions}\n          focusIndex={focusIndex}\n          onClick={(_e, index) => handleItemClicked(index)}\n        />\n      ) : (\n        <div className={cn(NoOptions, \"no-options\")}>{t(\"noOptions\")}</div>\n      )}\n    </div>\n  );\n};\n\nexport default SelectPanel;\n","export const debounce = (func, wait) => {\n  let timeout;\n  return function (...args) {\n    clearTimeout(timeout);\n    timeout = setTimeout(() => {\n      func.apply(null, args);\n    }, wait);\n  };\n};\n","import React from \"react\";\n\nexport const Arrow = ({ expanded }) => (\n  <svg\n    width=\"24\"\n    height=\"24\"\n    fill=\"none\"\n    stroke=\"currentColor\"\n    strokeWidth=\"2\"\n    className=\"dropdown-heading-dropdown-arrow gray\"\n  >\n    <path d={expanded ? \"M18 15 12 9 6 15\" : \"M6 9L12 15 18 9\"} />\n  </svg>\n);\n","import React from \"react\";\n\nimport { useMultiSelect } from \"../hooks/use-multi-select\";\n\nexport const DropdownHeader = () => {\n  const { t, value, options, valueRenderer } = useMultiSelect();\n\n  const noneSelected = value.length === 0;\n  const allSelected = value.length === options.length;\n  const customText = valueRenderer && valueRenderer(value, options);\n\n  const getSelectedText = () => value.map((s) => s.label).join(\", \");\n\n  return noneSelected ? (\n    <span className=\"gray\">{customText || t(\"selectSomeItems\")}</span>\n  ) : (\n    <span>\n      {customText ||\n        (allSelected ? t(\"allItemsAreSelected\") : getSelectedText())}\n    </span>\n  );\n};\n","import { css } from \"goober\";\nimport React from \"react\";\n\nconst Spinner = css({\n  animation: \"rotate 2s linear infinite\",\n\n  \"& .path\": {\n    stroke: \"var(--rmsc-border)\",\n    strokeWidth: \"4px\",\n    strokeLinecap: \"round\",\n    animation: \"dash 1.5s ease-in-out infinite\",\n  },\n\n  \"@keyframes rotate\": {\n    \"100%\": {\n      transform: \"rotate(360deg)\",\n    },\n  },\n\n  \"@keyframes dash\": {\n    \"0%\": {\n      strokeDasharray: \"1,150\",\n      strokeDashoffset: 0,\n    },\n    \"50%\": {\n      strokeDasharray: \"90,150\",\n      strokeDashoffset: \"-35\",\n    },\n    \"100%\": {\n      strokeDasharray: \"90,150\",\n      strokeDashoffset: \"-124\",\n    },\n  },\n});\n\nexport const Loading = ({ size = 24 }) => (\n  <span\n    style={{\n      width: size,\n      marginRight: \"0.2rem\",\n    }}\n  >\n    <svg\n      width={size}\n      height={size}\n      className={Spinner}\n      viewBox=\"0 0 50 50\"\n      style={{ display: \"inline\", verticalAlign: \"middle\" }}\n    >\n      <circle cx=\"25\" cy=\"25\" r=\"20\" fill=\"none\" className=\"path\"></circle>\n    </svg>\n  </span>\n);\n","/**\n * A generic dropdown component.  It takes the children of the component\n * and hosts it in the component.  When the component is selected, it\n * drops-down the contentComponent and applies the contentProps.\n */\nimport { css } from \"goober\";\nimport React, { useEffect, useRef, useState } from \"react\";\n\nimport { useDidUpdateEffect } from \"../hooks/use-did-update-effect\";\nimport { useMultiSelect } from \"../hooks/use-multi-select\";\nimport { cn } from \"../lib/classnames\";\nimport SelectPanel from \"../select-panel\";\nimport { Cross } from \"../select-panel/cross\";\nimport { Arrow } from \"./arrow\";\nimport { DropdownHeader } from \"./header\";\nimport { Loading } from \"./loading\";\n\nconst PanelContainer = css({\n  position: \"absolute\",\n  zIndex: 1,\n  top: \"100%\",\n  width: \"100%\",\n  paddingTop: \"8px\",\n  \".panel-content\": {\n    maxHeight: \"300px\",\n    overflowY: \"auto\",\n    borderRadius: \"var(--rmsc-radius)\",\n    background: \"var(--rmsc-bg)\",\n    boxShadow: \"0 0 0 1px rgba(0, 0, 0, 0.1), 0 4px 11px rgba(0, 0, 0, 0.1)\",\n  },\n});\n\nconst DropdownContainer = css({\n  position: \"relative\",\n  outline: 0,\n  backgroundColor: \"var(--rmsc-bg)\",\n  border: \"1px solid var(--rmsc-border)\",\n  borderRadius: \"var(--rmsc-radius)\",\n  \"&:focus-within\": {\n    boxShadow: \"var(--rmsc-main) 0 0 0 1px\",\n    borderColor: \"var(--rmsc-main)\",\n  },\n});\n\nconst DropdownHeading = css({\n  position: \"relative\",\n  padding: \"0 var(--rmsc-p)\",\n  display: \"flex\",\n  alignItems: \"center\",\n  width: \"100%\",\n  height: \"var(--rmsc-h)\",\n  cursor: \"default\",\n  outline: 0,\n  \".dropdown-heading-value\": {\n    overflow: \"hidden\",\n    textOverflow: \"ellipsis\",\n    whiteSpace: \"nowrap\",\n    flex: 1,\n  },\n});\n\nconst ClearSelectedButton = css({\n  cursor: \"pointer\",\n  background: \"none\",\n  border: 0,\n  padding: 0,\n  display: \"flex\",\n});\n\nconst Dropdown = () => {\n  const {\n    t,\n    onMenuToggle,\n    ArrowRenderer,\n    shouldToggleOnHover,\n    isLoading,\n    disabled,\n    onChange,\n    labelledBy,\n    value,\n    isOpen,\n    defaultIsOpen,\n    ClearSelectedIcon,\n  } = useMultiSelect();\n\n  const [isInternalExpand, setIsInternalExpand] = useState(true);\n  const [expanded, setExpanded] = useState(defaultIsOpen);\n  const [hasFocus, setHasFocus] = useState(false);\n  const FinalArrow = ArrowRenderer || Arrow;\n\n  const wrapper: any = useRef();\n\n  useDidUpdateEffect(() => {\n    onMenuToggle && onMenuToggle(expanded);\n  }, [expanded]);\n\n  useEffect(() => {\n    if (defaultIsOpen === undefined && typeof isOpen === \"boolean\") {\n      setIsInternalExpand(false);\n      setExpanded(isOpen);\n    }\n  }, [isOpen]);\n\n  const handleKeyDown = (e) => {\n    if (isInternalExpand) {\n      switch (e.which) {\n        case 27: // Escape\n        case 38: // Up Arrow\n          setExpanded(false);\n          wrapper?.current?.focus();\n          break;\n        case 32: // Space\n        case 13: // Enter Key\n        case 40: // Down Arrow\n          setExpanded(true);\n          break;\n        default:\n          return;\n      }\n    }\n    e.preventDefault();\n  };\n\n  const handleHover = (iexpanded: boolean) => {\n    isInternalExpand && shouldToggleOnHover && setExpanded(iexpanded);\n  };\n\n  const handleFocus = () => !hasFocus && setHasFocus(true);\n\n  const handleBlur = (e) => {\n    if (!e.currentTarget.contains(e.relatedTarget) && isInternalExpand) {\n      setHasFocus(false);\n      setExpanded(false);\n    }\n  };\n\n  const handleMouseEnter = () => handleHover(true);\n\n  const handleMouseLeave = () => handleHover(false);\n\n  const toggleExpanded = () => {\n    isInternalExpand && setExpanded(isLoading || disabled ? false : !expanded);\n  };\n\n  const handleClearSelected = (e) => {\n    e.stopPropagation();\n    onChange([]);\n    isInternalExpand && setExpanded(false);\n  };\n\n  return (\n    <div\n      tabIndex={0}\n      className={cn(DropdownContainer, \"dropdown-container\")}\n      aria-labelledby={labelledBy}\n      aria-expanded={expanded}\n      aria-readonly={true}\n      aria-disabled={disabled}\n      ref={wrapper}\n      onKeyDown={handleKeyDown}\n      onFocus={handleFocus}\n      onBlur={handleBlur}\n      onMouseEnter={handleMouseEnter}\n      onMouseLeave={handleMouseLeave}\n    >\n      <div\n        className={cn(DropdownHeading, \"dropdown-heading\")}\n        onClick={toggleExpanded}\n      >\n        <div className=\"dropdown-heading-value\">\n          <DropdownHeader />\n        </div>\n        {isLoading && <Loading />}\n        {value.length > 0 && (\n          <button\n            type=\"button\"\n            className={cn(ClearSelectedButton, \"clear-selected-button\")}\n            onClick={handleClearSelected}\n            disabled={disabled}\n            aria-label={t(\"clearSelected\")}\n          >\n            {ClearSelectedIcon || <Cross />}\n          </button>\n        )}\n        <FinalArrow expanded={expanded} />\n      </div>\n      {expanded && (\n        <div className={cn(PanelContainer, \"dropdown-content\")}>\n          <div className=\"panel-content\">\n            <SelectPanel />\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Dropdown;\n","import { useEffect, useRef } from \"react\";\n\n/**\n * similar to `useEffect` but gets triggered only when value changes\n * @param fn executable function on dependency updates\n * @param inputs dependency array\n */\nexport function useDidUpdateEffect(fn, inputs) {\n  const didMountRef = useRef(false);\n\n  useEffect(() => {\n    if (didMountRef.current) fn();\n    else didMountRef.current = true;\n  }, inputs);\n}\n","import { css } from \"goober\";\nimport React from \"react\";\n\nimport { MultiSelectProvider } from \"../hooks/use-multi-select\";\nimport { cn } from \"../lib/classnames\";\nimport { ISelectProps } from \"../lib/interfaces\";\nimport Dropdown from \"./dropdown\";\n\nconst MultiSelectBox = css({\n  \"--rmscMain\": \"#4285f4\",\n  \"--rmscHover\": \"#f1f3f5\",\n  \"--rmscSelected\": \"#e2e6ea\",\n  \"--rmscBorder\": \"#ccc\",\n  \"--rmscGray\": \"#aaa\",\n  \"--rmscBg\": \"#fff\",\n  \"--rmscP\": \"10px\",\n  \"--rmscRadius\": \"4px\",\n  \"--rmscH\": \"38px\",\n\n  \"*\": {\n    boxSizing: \"border-box\",\n    transition: \"all 0.2s ease\",\n  },\n  \".gray\": {\n    color: \"var(--rmsc-gray)\",\n  },\n});\n\nconst MultiSelect = (props: ISelectProps) => (\n  <MultiSelectProvider props={props}>\n    <div className={cn(MultiSelectBox, props.className || \"multi-select\")}>\n      <Dropdown />\n    </div>\n  </MultiSelectProvider>\n);\n\nexport default MultiSelect;\n"],"names":["defaultStrings","allItemsAreSelected","clearSearch","clearSelected","noOptions","search","selectAll","selectSomeItems","defaultProps","value","focusSearchOnOpen","hasSelectAll","className","debounceDuration","options","MultiSelectContext","React","createContext","MultiSelectProvider","props","children","Provider","t","key","overrideStrings","useMultiSelect","useContext","cn","classes","join","typeaheadSimilarity","a","b","aLength","length","bLength","table","indexOf","x","y","Math","max","cleanUpText","input","substitutions","toUpperCase","replace","safeSubstitutions","Object","keys","reduce","output","substitution","unsubbed","RegExp","Cross","width","height","fill","stroke","strokeWidth","x1","y1","x2","y2","DefaultRenderer","css","verticalAlign","margin","span","display","paddingLeft","opacity","DefaultItemRenderer","checked","option","onClick","disabled","type","onChange","tabIndex","label","ItemContainer","boxSizing","cursor","padding","outline","background","SelectItem","itemRenderer","ItemRenderer","focused","onSelectionChanged","itemRef","useRef","useEffect","updateFocus","toggleChecked","current","focus","role","ref","onKeyDown","e","which","preventDefault","SelectListUl","li","listStyle","SelectList","focusIndex","map","o","i","c","handleSelectionChanged","filter","find","s","FocusType","SelectSearchContainer","position","borderBottom","border","SearchClearButton","top","right","bottom","NoOptions","textAlign","color","SelectPanel","filterOptions","customFilterOptions","selectAllLabel","disableSearch","ClearIcon","searchText","setSearchText","useState","filteredOptions","setFilteredOptions","searchTextForFilter","setSearchTextForFilter","setFocusIndex","SEARCH","NONE","debouncedSearch","useCallback","func","wait","timeout","args","clearTimeout","setTimeout","apply","debounce","query","selectAllOption","handleItemClicked","index","offset","newFocus","min","isAllOptionSelected","hasSelectableOptions","useMemo","filteredOptionsList","every","findIndex","v","async","cleanFilter","score","pair","sort","getFilteredOptions","then","altKey","stopPropagation","autoFocus","placeholder","target","onFocus","hidden","newOptions","filteredValues","finalSelectedValues","includes","selectAllValues","_e","Arrow","expanded","d","DropdownHeader","valueRenderer","noneSelected","allSelected","customText","Spinner","animation","strokeLinecap","transform","strokeDasharray","strokeDashoffset","Loading","size","style","marginRight","viewBox","cx","cy","r","PanelContainer","zIndex","paddingTop","maxHeight","overflowY","borderRadius","boxShadow","DropdownContainer","backgroundColor","borderColor","DropdownHeading","alignItems","overflow","textOverflow","whiteSpace","flex","ClearSelectedButton","Dropdown","onMenuToggle","ArrowRenderer","shouldToggleOnHover","isLoading","labelledBy","isOpen","defaultIsOpen","ClearSelectedIcon","isInternalExpand","setIsInternalExpand","setExpanded","hasFocus","setHasFocus","FinalArrow","wrapper","fn","inputs","didMountRef","useDidUpdateEffect","undefined","handleHover","iexpanded","onBlur","currentTarget","contains","relatedTarget","onMouseEnter","onMouseLeave","MultiSelectBox","transition"],"mappings":"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"}