{"id":"../node_modules/micromark/dist/tokenize/partial-blank-line.js","dependencies":[{"name":"D:\\Users\\joyce\\web-programming\\Projetos\\Todo-Frontend\\package.json","includedInParent":true,"mtime":1615578813613},{"name":"D:\\Users\\joyce\\web-programming\\Projetos\\Todo-Frontend\\node_modules\\micromark\\package.json","includedInParent":true,"mtime":1615486677174},{"name":"../character/markdown-line-ending.js","loc":{"line":3,"column":33},"parent":"D:\\Users\\joyce\\web-programming\\Projetos\\Todo-Frontend\\node_modules\\micromark\\dist\\tokenize\\partial-blank-line.js","resolved":"D:\\Users\\joyce\\web-programming\\Projetos\\Todo-Frontend\\node_modules\\micromark\\dist\\character\\markdown-line-ending.js"},{"name":"./factory-space.js","loc":{"line":4,"column":27},"parent":"D:\\Users\\joyce\\web-programming\\Projetos\\Todo-Frontend\\node_modules\\micromark\\dist\\tokenize\\partial-blank-line.js","resolved":"D:\\Users\\joyce\\web-programming\\Projetos\\Todo-Frontend\\node_modules\\micromark\\dist\\tokenize\\factory-space.js"}],"generated":{"js":"'use strict'\n\nvar markdownLineEnding = require('../character/markdown-line-ending.js')\nvar factorySpace = require('./factory-space.js')\n\nvar partialBlankLine = {\n  tokenize: tokenizePartialBlankLine,\n  partial: true\n}\n\nfunction tokenizePartialBlankLine(effects, ok, nok) {\n  return factorySpace(effects, afterWhitespace, 'linePrefix')\n\n  function afterWhitespace(code) {\n    return code === null || markdownLineEnding(code) ? ok(code) : nok(code)\n  }\n}\n\nmodule.exports = partialBlankLine\n"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/micromark/dist/tokenize/partial-blank-line.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/micromark/dist/tokenize/partial-blank-line.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/micromark/dist/tokenize/partial-blank-line.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/micromark/dist/tokenize/partial-blank-line.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/micromark/dist/tokenize/partial-blank-line.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/micromark/dist/tokenize/partial-blank-line.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/micromark/dist/tokenize/partial-blank-line.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/micromark/dist/tokenize/partial-blank-line.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/micromark/dist/tokenize/partial-blank-line.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/micromark/dist/tokenize/partial-blank-line.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/micromark/dist/tokenize/partial-blank-line.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/micromark/dist/tokenize/partial-blank-line.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/micromark/dist/tokenize/partial-blank-line.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/micromark/dist/tokenize/partial-blank-line.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/micromark/dist/tokenize/partial-blank-line.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/micromark/dist/tokenize/partial-blank-line.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/micromark/dist/tokenize/partial-blank-line.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/micromark/dist/tokenize/partial-blank-line.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/micromark/dist/tokenize/partial-blank-line.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/micromark/dist/tokenize/partial-blank-line.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}}],"sources":{"../node_modules/micromark/dist/tokenize/partial-blank-line.js":"'use strict'\n\nvar markdownLineEnding = require('../character/markdown-line-ending.js')\nvar factorySpace = require('./factory-space.js')\n\nvar partialBlankLine = {\n  tokenize: tokenizePartialBlankLine,\n  partial: true\n}\n\nfunction tokenizePartialBlankLine(effects, ok, nok) {\n  return factorySpace(effects, afterWhitespace, 'linePrefix')\n\n  function afterWhitespace(code) {\n    return code === null || markdownLineEnding(code) ? ok(code) : nok(code)\n  }\n}\n\nmodule.exports = partialBlankLine\n"},"lineCount":20}},"error":null,"hash":"daec3ac2ab245f3d01dfe21048dd88a0","cacheData":{"env":{}}}